/******************************************************************************
 *
 * (c) 2020 Copyright, Real-Time Innovations, Inc. (RTI) All rights reserved.
 *
 * RTI grants Licensee a license to use, modify, compile, and create derivative
 * works of the Software solely in combination with RTI Connext DDS. Licensee
 * may redistribute copies of the Software provided that all such copies are
 * subject to this License. The Software is provided "as is", with no warranty
 * of any type, including any warranty for fitness for any purpose. RTI is
 * under no obligation to maintain or support the Software. RTI shall not be
 * liable for any incidental or consequential damages arising out of the use or
 * inability to use the Software. For purposes of clarity, nothing in this
 * License prevents Licensee from using alternate versions of DDS, provided
 * that Licensee may not combine or link such alternate versions of DDS with
 * the Software.
 *
 ******************************************************************************/

#include <string.h>
#define NDDSA_AGENT_DTD_SIZE 66
const char * NDDSA_AGENT_DTD[NDDSA_AGENT_DTD_SIZE] = {
"<!-- \n (c) Copyright, Real-Time Innovations, 2008-2016.\n All rights reserved.\n No duplications, whole or partial, manual or electronic, may be made\n without express written permission.  Any such copies, or\n revisions thereof, must display this notice unaltered.\n This code contains trade secrets of Real-Time Innovations, Inc.\n\nDescription\nDDS QoS Profiles DTD\n-->\n\n<!-- dds --> \n<!ELEMENT dds (qos_library|types|type_library|domain_library|participant_library|domain_participant_library|application_library|external_service)+>\n<!ATTLIST dds xmlns:xsi CDATA #IMPLIED>\n<!ATTLIST dds xsi:noNamespaceSchemaLocation CDATA #IMPLIED>\n<!ATTLIST dds version CDATA \"6.0.0\">\n\n \n<!-- domain_library -->\n<!ELEMENT domain_library (domain)+>\n<!ATTLIST domain_library name CDATA #REQUIRED>\n\n<!-- domain -->\n<!ELEMENT domain (register_type| \n				  topic| \n				  domain_id| \n				  participant_qos| \n				  deserialize_mode| \n				  type_config)*>\n<!ATTLIST domain name CDATA #REQUIRED>\n<!ATTLIST domain base_name CDATA #IMPLIED>\n<!ATTLIST domain domain_id CDAT",
"A #IMPLIED>\n\n<!-- participant_library -->\n<!ELEMENT participant_library (domain_participant)+>\n<!ATTLIST participant_library name CDATA #REQUIRED>\n\n<!-- domain_participant_library -->\n<!ELEMENT domain_participant_library (domain_participant)+>\n<!ATTLIST domain_participant_library name CDATA #REQUIRED>\n\n<!-- application_library -->\n<!ELEMENT application_library (application*)>\n<!ATTLIST application_library name NMTOKEN #REQUIRED>\n\n<!-- application -->\n<!ELEMENT application (domain_participant)+>\n<!ATTLIST application name NMTOKEN #REQUIRED>\n\n<!-- external_service -->\n<!ELEMENT external_service (service_descriptor?, (service_resource*))>\n<!ATTLIST external_service name NMTOKEN #REQUIRED>\n\n<!ATTLIST external_service plugin NMTOKEN #REQUIRED>\n\n<!ATTLIST external_service url CDATA #IMPLIED>\n\n<!-- service_descriptor -->\n<!ELEMENT service_descriptor (#PCDATA) >\n<!-- service_resource -->\n<!ELEMENT service_resource  (#PCDATA) >\n<!ATTLIST service_resource name NMTOKEN #REQUIRED>\n\n<!ATTLIST service_resource path CDATA #IMPLIED>\n\n<!-- domain_participant -->\n<!ELEMENT domain_participant (\n                        memory_management?,\n                        (register_type* | \n                        topic*), \n                        (publisher* | \n                        subscriber* | \n                        data_writer* | \n                        data_reader* | \n                        participant_qos?))>\n<!ATTLIST domain_participant name CDATA #REQUIRED>\n<!ATTLIST domain_participant base_name CDATA #",
"IMPLIED>\n<!ATTLIST domain_participant domain_ref CDATA #IMPLIED>\n<!ATTLIST domain_participant domain_id CDATA #IMPLIED>\n\n<!-- publisher -->\n<!ELEMENT publisher (data_writer* | publisher_qos?)>\n<!ATTLIST publisher name CDATA #REQUIRED>\n<!ATTLIST publisher multiplicity CDATA #IMPLIED>\n\n<!-- data_writer -->\n<!ELEMENT data_writer (datawriter_qos)?>\n<!ATTLIST data_writer name CDATA #REQUIRED>\n<!ATTLIST data_writer multiplicity CDATA #IMPLIED>\n<!ATTLIST data_writer topic_ref CDATA #REQUIRED>\n\n<!-- subscriber -->\n<!ELEMENT subscriber (data_reader* | subscriber_qos?)>\n<!ATTLIST subscriber name CDATA #REQUIRED>\n<!ATTLIST subscriber multiplicity CDATA #IMPLIED>\n\n<!-- data_reader -->\n<!ELEMENT data_reader (filter? | datareader_qos?)>\n<!ATTLIST data_reader name CDATA #REQUIRED>\n<!ATTLIST data_reader multiplicity CDATA #IMPLIED>\n<!ATTLIST data_reader topic_ref CDATA #REQUIRED>\n\n<!-- Filter -->\n<!ELEMENT filter (#PCDATA|expression|parameter_list)*>\n<!ATTLIST filter name CDATA #IMPLIED>\n<!ATTLIST filter kind (builtin.sql|bu",
"iltin.stringMatch) #IMPLIED>\n\n<!-- expression-->\n<!ELEMENT expression (#PCDATA)>\n\n<!-- parameters-->\n<!ELEMENT parameter_list (param+)>\n<!ELEMENT param (#PCDATA)>\n\n<!-- register_type -->\n<!ELEMENT register_type (registered_name)?>\n<!ATTLIST register_type name CDATA #REQUIRED>\n<!ATTLIST register_type kind (builtin.string| \n                                builtin.keyedString| \n                                builtin.octets| \n                                builtin.keyedOctets| \n                                dynamicData| \n                                userGenerated) #IMPLIED>\n<!ATTLIST register_type type_ref CDATA #IMPLIED>\n\n<!-- Topic -->\n<!ELEMENT topic (registered_name? | topic_qos?)>\n<!ATTLIST topic name CDATA #REQUIRED>\n<!ATTLIST topic register_type_ref CDATA #REQUIRED>\n\n<!-- registered_name-->\n<!ELEMENT registered_name (#PCDATA)>\n\n<!ELEMENT memory_management (sample_buffer_min_size?|\n                             sample_buffer_trim_to_size? |\n                             pool_sample_buffer_max_size?|\n  ",
"                           persistent_sample_buffer_max_size?)*>\n<!ELEMENT sample_buffer_min_size (#PCDATA)>\n<!ELEMENT sample_buffer_trim_to_size (#PCDATA)>\n\n<!-- qos_library --> \n<!ELEMENT qos_library (participant_qos|\n                       participant_factory_qos|\n                       topic_qos| \n                       publisher_qos| \n                       subscriber_qos| \n                       writer_qos| \n                       reader_qos| \n                       datawriter_qos| \n                       datareader_qos| \n                       qos_profile)*> \n<!ATTLIST qos_library name CDATA #REQUIRED> \n\n<!-- qos_profile --> \n<!ELEMENT qos_profile (base_name|\n                       participant_qos| \n                       participant_factory_qos|\n                       topic_qos| \n                       publisher_qos| \n                       subscriber_qos| \n                       writer_qos| datawriter_qos|\n                       reader_qos| datareader_qos)*> \n<!ATTLIST qos_profile name CDATA #REQUIRE",
"D> \n<!ATTLIST qos_profile base_name CDATA #IMPLIED> \n<!ATTLIST qos_profile is_default_qos CDATA #IMPLIED> \n<!ATTLIST qos_profile is_default_participant_factory_profile CDATA #IMPLIED>\n\n<!ELEMENT base_name (element)+>\n\n<!-- participant_qos --> \n<!ELEMENT participant_qos (base_name|\n				   user_data| \n                   entity_factory| \n                   wire_protocol| \n                   transport_builtin| \n                   default_unicast|\n                   multicast_mapping| \n                   discovery| \n                   resource_limits| \n                   event| \n                   receiver_pool| \n                   database| \n                   discovery_config| \n                   property| \n                   participant_name|\n                   type_support)*> \n<!ATTLIST participant_qos name CDATA #IMPLIED> \n<!ATTLIST participant_qos base_name CDATA #IMPLIED> \n<!ATTLIST participant_qos base_qos_name CDATA #IMPLIED> \n\n<!-- participant_factory_qos -->\n<!ELEMENT participant_factory_qos (base_name|",
"logging|entity_factory)*>\n<!ATTLIST participant_factory_qos name CDATA #IMPLIED>\n<!ATTLIST participant_factory_qos base_name CDATA #IMPLIED>\n<!ATTLIST participant_factory_qos base_qos_name CDATA #IMPLIED>\n\n<!-- topic_qos --> \n<!ELEMENT topic_qos (base_name|\n					 topic_data| \n                     durability| \n                     durability_service| \n                     deadline| \n                     latency_budget| \n                     liveliness| \n                     reliability| \n                     destination_order| \n                     history| \n                     resource_limits| \n                     transport_priority| \n                     lifespan| \n                     ownership|\n                     representation)*>\n<!ATTLIST topic_qos name CDATA #IMPLIED> \n<!ATTLIST topic_qos base_name CDATA #IMPLIED> \n<!ATTLIST topic_qos base_qos_name CDATA #IMPLIED> \n<!ATTLIST topic_qos topic_filter CDATA #IMPLIED>\n\n<!-- publisher_qos --> \n<!ELEMENT publisher_qos (base_name|\n						presentation| \n     ",
"                   partition| \n                        group_data| \n                        entity_factory| \n                        asynchronous_publisher| \n                        exclusive_area|\n                        publisher_name)*> \n<!ATTLIST publisher_qos name CDATA #IMPLIED> \n<!ATTLIST publisher_qos base_name CDATA #IMPLIED> \n<!ATTLIST publisher_qos base_qos_name CDATA #IMPLIED> \n\n<!-- subscriber_qos --> \n<!ELEMENT subscriber_qos (base_name|\n						  presentation| \n                          partition| \n                          group_data| \n                          entity_factory| \n                          exclusive_area|\n                          subscriber_name)*> \n<!ATTLIST subscriber_qos name CDATA #IMPLIED> \n<!ATTLIST subscriber_qos base_name CDATA #IMPLIED> \n<!ATTLIST subscriber_qos base_qos_name CDATA #IMPLIED> \n\n<!-- writer_qos --> \n<!ELEMENT writer_qos (base_name|\n				  durability| \n      		      durability_service| \n      		      deadline| \n      		      latency_budget| \n      		      liv",
"eliness| \n      		      reliability| \n      		      destination_order| \n      		      history| \n      		      resource_limits| \n      		      transport_priority| \n      		      lifespan| \n      		      user_data| \n      		      ownership| \n      		      ownership_strength| \n      		      writer_data_lifecycle| \n      		      writer_resource_limits| \n      		      protocol| \n      		      transport_selection| \n      		      unicast| \n      		      type_support| \n      		      publish_mode| \n      		      property|\n                  data_tags|\n                  batch|\n                  multi_channel|\n                  availability|\n                  publication_name|\n                  encapsulation|\n                  service|\n                  topic_query_dispatch|\n                  representation|\n                  transfer_mode)*>\n<!ATTLIST writer_qos name CDATA #IMPLIED> \n<!ATTLIST writer_qos base_name CDATA #IMPLIED> \n<!ATTLIST writer_qos base_qos_name CDATA #IMPLIED> \n<!ATTLIST writer_qos topic_filter CDAT",
"A #IMPLIED>\n\n<!-- datawriter_qos --> \n<!ELEMENT datawriter_qos (base_name|\n				  durability| \n      		      durability_service| \n      		      deadline| \n      		      latency_budget| \n      		      liveliness| \n      		      reliability| \n      		      destination_order| \n      		      history| \n      		      resource_limits| \n      		      transport_priority| \n      		      lifespan| \n      		      user_data| \n      		      ownership| \n      		      ownership_strength| \n      		      writer_data_lifecycle| \n      		      writer_resource_limits| \n      		      protocol| \n      		      transport_selection| \n      		      unicast| \n      		      type_support| \n      		      publish_mode| \n      		      property|\n                  data_tags|\n                  batch|\n                  multi_channel|\n                  availability|\n                  publication_name|\n                  encapsulation|\n                  service|\n                  topic_query_dispatch|\n                  representation|\n              ",
"    transfer_mode)*>\n<!ATTLIST datawriter_qos name CDATA #IMPLIED> \n<!ATTLIST datawriter_qos base_name CDATA #IMPLIED> \n<!ATTLIST datawriter_qos base_qos_name CDATA #IMPLIED> \n<!ATTLIST datawriter_qos topic_filter CDATA #IMPLIED>\n\n<!-- reader_qos --> \n<!ELEMENT reader_qos (base_name|\n				  durability| \n      		      deadline| \n      		      latency_budget| \n      		      liveliness| \n      		      reliability| \n      		      destination_order| \n      		      history| \n      		      resource_limits| \n      		      user_data| \n      		      ownership| \n      		      time_based_filter| \n      		      reader_data_lifecycle| \n      		      reader_resource_limits| \n      		      protocol| \n      		      transport_selection| \n      		      unicast| \n      		      multicast| \n      		      type_support| \n      		      property|\n                  data_tags|\n                  availability|\n                  subscription_name|\n                  encapsulation|\n                  type_consistency|\n                  transpo",
"rt_priority|\n                  service|\n                  representation)*>\n<!ATTLIST reader_qos name CDATA #IMPLIED> \n<!ATTLIST reader_qos base_name CDATA #IMPLIED> \n<!ATTLIST reader_qos base_qos_name CDATA #IMPLIED> \n<!ATTLIST reader_qos topic_filter CDATA #IMPLIED>\n\n<!-- datareader_qos --> \n<!ELEMENT datareader_qos (base_name|\n				  durability| \n      		      deadline| \n      		      latency_budget| \n      		      liveliness| \n      		      reliability| \n      		      destination_order| \n      		      history| \n      		      resource_limits| \n      		      user_data| \n      		      ownership| \n      		      time_based_filter| \n      		      reader_data_lifecycle| \n      		      reader_resource_limits| \n      		      protocol| \n      		      transport_selection| \n      		      unicast| \n      		      multicast| \n      		      type_support| \n      		      property|\n                  data_tags|\n                  availability|\n                  subscription_name|\n                  encapsulation|\n              ",
"    type_consistency|\n                  transport_priority|\n                  service|\n                  representation)*>\n<!ATTLIST datareader_qos name CDATA #IMPLIED> \n<!ATTLIST datareader_qos base_name CDATA #IMPLIED> \n<!ATTLIST datareader_qos base_qos_name CDATA #IMPLIED> \n<!ATTLIST datareader_qos topic_filter CDATA #IMPLIED>\n\n<!-- !!!!!Qos Policies!!!!! --> \n \n<!-- user_data --> \n<!ELEMENT user_data (value)> \n \n<!-- entity_factory --> \n<!ELEMENT entity_factory (autoenable_created_entities)> \n \n<!-- wire_protocol --> \n<!ELEMENT wire_protocol (\n        participant_id|\n        rtps_auto_id_kind|\n        rtps_host_id|\n        rtps_app_id|\n        rtps_instance_id|\n        rtps_well_known_ports|\n        compute_crc|\n        check_crc|\n        rtps_reserved_port_mask)*>\n \n<!-- transport_builtin --> \n<!ELEMENT transport_builtin (mask|shmem|udpv4|udpv6)>\n \n<!-- default_unicast --> \n<!ELEMENT default_unicast (value)> \n \n<!-- multicast_mapping --> \n<!ELEMENT multicast_mapping (value)> \n \n<!-- discovery --> \n<!ELEM",
"ENT discovery (enabled_transports|initial_peers|\n                     multicast_receive_addresses|metatraffic_transport_priority|accept_unknown_peers|enable_endpoint_discovery)*> \n\n<!-- logging -->\n<!ELEMENT logging (verbosity|category|print_format|output_file|output_file_suffix|max_bytes_per_file|max_files)*>\n\n<!-- resource_limits --> \n<!ELEMENT resource_limits (\n        local_writer_allocation|\n        local_reader_allocation|\n        local_publisher_allocation|\n        local_subscriber_allocation|\n        local_topic_allocation|\n        local_type_allocation|\n        remote_writer_allocation|\n        remote_reader_allocation|\n        remote_participant_allocation|\n        matching_writer_reader_pair_allocation|\n        matching_reader_writer_pair_allocation|\n        ignored_entity_allocation|\n        content_filtered_topic_allocation|\n        content_filter_allocation|\n        read_condition_allocation|\n        query_condition_allocation|\n        outstanding_asynchronous_sample_allocation|\n        flow_con",
"troller_allocation|\n        local_writer_hash_buckets|\n        local_reader_hash_buckets|\n        local_publisher_hash_buckets|\n        local_subscriber_hash_buckets|\n        local_topic_hash_buckets|\n        remote_writer_hash_buckets|\n        remote_reader_hash_buckets|\n        remote_participant_hash_buckets|\n        matching_writer_reader_pair_hash_buckets|\n        matching_reader_writer_pair_hash_buckets|\n        ignored_entity_hash_buckets|\n        content_filtered_topic_hash_buckets|\n        content_filter_hash_buckets|\n        flow_controller_hash_buckets|\n        max_gather_destinations|\n        participant_user_data_max_length|\n        topic_data_max_length|\n        publisher_group_data_max_length|\n        subscriber_group_data_max_length|\n        writer_user_data_max_length|\n        reader_user_data_max_length|\n        max_partitions|\n        max_partition_cumulative_characters|\n        max_endpoint_groups|\n        max_endpoint_groups_cumulative_characters|\n        type_code_max_serialized_length|\n",
"        type_object_max_serialized_length|\n        serialized_type_object_dynamic_allocation_threshold|\n        type_object_max_deserialized_length|\n        deserialized_type_object_dynamic_allocation_threshold|\n        contentfilter_property_max_length|\n        participant_property_list_max_length|\n        participant_property_string_max_length|\n        writer_property_list_max_length|\n        writer_property_string_max_length|\n        reader_property_list_max_length|\n        reader_property_string_max_length|\n        max_samples|\n        max_instances|\n        max_samples_per_instance|\n        initial_samples|\n        max_endpoint_groups|\n        max_endpoint_group_cumulative_characters|\n        initial_instances|\n        instance_hash_buckets|\n        ignored_entity_replacement_kind|\n        channel_seq_max_length|\n        channel_filter_expression_max_length|\n        type_signature_list_max_length|\n        type_signature_string_max_length|\n        transport_info_list_max_length|\n        remote_topic_query",
"_allocation|\n        remote_topic_query_hash_buckets|\n        writer_data_tag_list_max_length|\n        writer_data_tag_string_max_length|\n        reader_data_tag_list_max_length|\n        reader_data_tag_string_max_length|\n        shmem_ref_transfer_mode_max_segments|\n        max_receive_ports|\n        max_destination_ports)*>\n\n\n<!-- event --> \n<!ELEMENT event (thread|initial_count|max_count)*> \n \n<!-- receiver_pool --> \n<!ELEMENT receiver_pool (thread|buffer_size|buffer_alignment)*> \n \n<!-- database --> \n<!ELEMENT database (thread|shutdown_timeout|cleanup_period| \n                    shutdown_cleanup_period|initial_records|max_skiplist_level| \n		            max_weak_references|initial_weak_references)*> \n \n<!-- discovery_config --> \n<!ELEMENT discovery_config (participant_liveliness_lease_duration|participant_liveliness_assert_period| \n                            remote_participant_purge_kind|max_liveliness_loss_detection_period| \n                            initial_participant_announcements|min_initial_parti",
"cipant_announcement_period|max_initial_participant_announcement_period| \n                            participant_reader_resource_limits|publication_reader| \n                            publication_reader_resource_limits|subscription_reader| \n                            subscription_reader_resource_limits|publication_writer| \n                            publication_writer_data_lifecycle|subscription_writer|\n                            subscription_writer_data_lifecycle|builtin_discovery_plugins|\n                            asynchronous_publisher|\n                            default_domain_announcement_period|\n                            ignore_default_domain_announcements|\n                            participant_message_reader_reliability_kind|\n                            participant_message_reader|participant_message_writer|\n                            participant_proxy_reader|participant_state_writer|\n                            publication_writer_publish_mode|subscription_writer_publish_mode|\n              ",
"              service_request_reader|service_request_writer|\n                            service_request_writer_data_lifecycle|\n                            service_request_writer_publish_mode|\n                            locator_reachability_assert_period|\n                            locator_reachability_lease_duration|\n                            locator_reachability_change_detection_period|\n                            secure_volatile_writer_publish_mode|\n                            endpoint_type_object_lb_serialization_threshold|\n                            max_participant_locators|\n                            max_locators_per_discovered_participant|\n                            cache_serialized_samples)*>\n\n<!ELEMENT default_domain_announcement_period (sec|nanosec)*> \n<!ELEMENT ignore_default_domain_announcements (#PCDATA)*> \n\n<!ELEMENT locator_reachability_assert_period (sec|nanosec)*>\n<!ELEMENT locator_reachability_lease_duration (sec|nanosec)*>\n<!ELEMENT locator_reachability_change_detection_period (sec|n",
"anosec)*>\n\n<!-- property --> \n<!ELEMENT property (value)*>\n<!ATTLIST property inherit CDATA #IMPLIED> \n\n<!-- data tags --> \n<!ELEMENT data_tags (tags)*>\n<!ATTLIST data_tags inherit CDATA #IMPLIED> \n \n<!-- participant_name --> \n<!ELEMENT participant_name (name|role_name)> \n\n<!-- publisher_name --> \n<!ELEMENT publisher_name (name|role_name)> \n\n<!-- subscriber_name --> \n<!ELEMENT subscriber_name (name|role_name)> \n\n<!-- publication_name --> \n<!ELEMENT publication_name (name|role_name)> \n\n<!-- subscription_name --> \n<!ELEMENT subscription_name (name|role_name)> \n \n<!-- topic_data --> \n<!ELEMENT topic_data (value)> \n \n<!-- durability --> \n<!ELEMENT durability (kind|direct_communication)*> \n \n<!-- durability_service --> \n<!ELEMENT durability_service (service_cleanup_delay|history_kind|history_depth| \n                              max_samples|max_instances|max_samples_per_instance)*> \n \n<!-- deadline --> \n<!ELEMENT deadline (period)> \n \n<!-- latency_budget --> \n<!ELEMENT latency_budget (duration)> \n \n<!-- liveliness",
" --> \n<!ELEMENT liveliness (kind|lease_duration|assertions_per_lease_duration)*> \n\n<!-- reliability --> \n<!ELEMENT reliability (kind|max_blocking_time|acknowledgment_kind)*> \n \n<!-- destination_order --> \n<!ELEMENT destination_order (kind|scope|source_timestamp_tolerance)*> \n \n<!-- history --> \n<!ELEMENT history (kind|depth|refilter)*> \n \n<!-- transport_priority --> \n<!ELEMENT transport_priority (value)> \n \n<!-- lifespan --> \n<!ELEMENT lifespan (duration)> \n \n<!-- ownership --> \n<!ELEMENT ownership (kind)>\n\n<!-- representation -->\n<!ELEMENT representation (value)>\n \n<!-- presentation --> \n<!ELEMENT presentation (access_scope|coherent_access|ordered_access)*> \n \n<!-- partition --> \n<!ELEMENT partition (name)> \n\n<!-- group_data --> \n<!ELEMENT group_data (value)> \n \n<!-- asynchronous_publisher --> \n<!ELEMENT asynchronous_publisher (disable_asynchronous_write|disable_asynchronous_batch|thread|\n				 asynchronous_batch_thread|asynchronous_batch_blocking_kind|\n				 disable_topic_query_publication|topic_query_publica",
"tion_thread)*>\n \n<!-- exclusive_area --> \n<!ELEMENT exclusive_area (use_shared_exclusive_area)> \n \n<!-- ownership_strength --> \n<!ELEMENT ownership_strength (value)> \n \n<!-- writer_data_lifecycle --> \n<!ELEMENT writer_data_lifecycle (autodispose_unregistered_instances|\n                                 autopurge_unregistered_instances_delay|\n                                 autopurge_disposed_instances_delay)> \n \n<!-- writer_resource_limits --> \n<!ELEMENT writer_resource_limits (\n		initial_concurrent_blocking_threads|\n		max_concurrent_blocking_threads|\n		max_remote_reader_filters|\n		initial_batches|\n		max_batches|\n		instance_replacement|\n		replace_empty_instances|\n		autoregister_instances|\n		initial_virtual_writers|\n		max_virtual_writers|\n		max_remote_readers|\n		max_app_ack_remote_readers|\n		max_routes_per_reader|\n		initial_active_topic_queries|\n		max_active_topic_queries|\n		writer_loaned_sample_allocation|\n		initialize_writer_loaned_sample)*>\n\n<!ELEMENT shmem_ref_settings (enable_data_consistency_check)>\n\n<!E",
"LEMENT enable_data_consistency_check (#PCDATA)>\n\n<!-- transfer_mode -->\n<!ELEMENT transfer_mode (shmem_ref_settings)>\n \n<!-- protocol --> \n<!ELEMENT protocol (\n        virtual_guid|\n        rtps_object_id|\n        push_on_write|\n        rtps_reliable_writer|\n        rtps_reliable_reader|\n        disable_positive_acks|\n        disable_inline_keyhash|\n        expects_inline_qos|\n        initial_virtual_sequence_number|\n        propagate_dispose_of_unregistered_instances|\n        serialize_key_with_dispose|\n        propagate_unregister_of_disposed_instances|\n        propagate_app_ack_with_no_response)*>\n \n<!-- transport_selection --> \n<!ELEMENT transport_selection (enabled_transports)> \n\n<!-- unicast --> \n<!ELEMENT unicast (value)> \n \n<!-- type_support --> \n<!ELEMENT type_support (plugin_data|cdr_padding_kind)*> \n \n<!-- publish_mode --> \n<!ELEMENT publish_mode (kind|flow_controller_name|priority)*> \n \n<!-- publication_writer_publish_mode --> \n<!ELEMENT publication_writer_publish_mode (kind|flow_controller_name|p",
"riority)*>\n\n<!-- subscription_writer_publish_mode --> \n<!ELEMENT subscription_writer_publish_mode (kind|flow_controller_name|priority)*> \n\n<!-- service_request_writer_publish_mode --> \n<!ELEMENT service_request_writer_publish_mode (kind|flow_controller_name|priority)*>\n\n<!-- secure_volatile_writer_publish_mode -->\n<!ELEMENT secure_volatile_writer_publish_mode (kind|flow_controller_name|priority)*>\n\n<!ELEMENT endpoint_type_object_lb_serialization_threshold (#PCDATA)>\n\n<!-- time_based_filter --> \n<!ELEMENT time_based_filter (minimum_separation)> \n \n<!-- reader_data_lifecycle --> \n<!ELEMENT reader_data_lifecycle (autopurge_nowriter_samples_delay|autopurge_disposed_samples_delay|autopurge_disposed_instances_delay)*> \n \n<!-- reader_resource_limits --> \n<!ELEMENT reader_resource_limits (\n        max_remote_writers|\n        max_remote_writers_per_instance|\n        max_samples_per_remote_writer|\n        max_infos|\n        max_routes_per_writer|\n        initial_remote_writers|\n        initial_remote_writers_per_instan",
"ce|\n        initial_infos|\n        initial_outstanding_reads|\n        max_outstanding_reads|\n        max_samples_per_read|\n        disable_fragmentation_support|\n        max_fragmented_samples|\n        initial_fragmented_samples|\n        max_fragmented_samples_per_remote_writer|\n        max_fragments_per_sample|\n        dynamically_allocate_fragmented_samples|\n        max_total_instances|\n        max_remote_virtual_writers_per_instance|\n        initial_remote_virtual_writers_per_instance|\n        initial_remote_virtual_writers|\n        max_remote_virtual_writers|\n        max_remote_writers_per_sample|\n        max_query_condition_filters|\n        max_app_ack_response_length|\n        keep_minimum_state_for_instances|\n        initial_topic_queries|\n        max_topic_queries|\n        shmem_ref_transfer_mode_attached_segment_allocation|\n        instance_replacement)*>\n\n<!-- multicast --> \n<!ELEMENT multicast (value|kind)> \n\n<!-- batch -->\n<!ELEMENT batch (enable|max_data_bytes|max_meta_data_bytes|max_samples|\n    ",
"             max_flush_delay|source_timestamp_resolution|thread_safe_write)*>\n\n<!-- multi_channel -->\n<!ELEMENT multi_channel (channels|filter_name)*> \n\n<!-- encapsulation -->\n<!ELEMENT encapsulation (value)> \n\n<!-- encapsulation -->\n<!ELEMENT availability (enable_required_subscriptions|\n                        max_data_availability_waiting_time|\n                        max_endpoint_availability_waiting_time|\n                        required_matched_endpoint_groups)*> \n                        \n<!-- topic_query_dispatch -->\n<!ELEMENT topic_query_dispatch (enable|publication_period|samples_per_period)*>                         \n\n<!ELEMENT enable_required_subscriptions (#PCDATA)>\n\n<!-- SHMEM -->\n<!ELEMENT shmem (received_message_count_max|\n        receive_buffer_size|\n        message_size_max|\n        recv_thread|\n        address_bit_count|\n        properties_bitmap|\n        gather_send_buffer_count_max|\n        host_id|\n        use_530_from_uuid_locator)>\n\n<!-- UDPV4 -->\n<!ELEMENT udpv4 (message_size_max|\n     ",
"   allow_interfaces_list|\n        deny_interfaces_list|\n        send_socket_buffer_size|\n        recv_socket_buffer_size|\n        multicast_ttl|\n        interface_table|\n        multicast_interface|\n        is_default_interface|\n        disable_auto_interface_config|\n        recv_thread|\n        address_bit_count|\n        properties_bitmap|\n        gather_send_buffer_count_max|\n        allow_multicast_interfaces_list|\n        deny_multicast_interfaces_list|\n        unicast_enabled|\n        multicast_enabled|\n        multicast_loopback_disabled|\n        ignore_loopback_interface|\n        use_zero_copy|\n        send_blocking|\n        transport_priority_mask|\n        transport_priority_mapping_low|\n        transport_priority_mapping_high|\n        interface_poll_period|\n        reuse_multicast_receive_resource|\n        protocol_overhead_max|\n        disable_interface_tracking|\n        public_address|\n        use_checksum)>\n\n<!-- UDPV6 -->\n<!ELEMENT udpv6 (address_bit_count|\n        properties_bitmap|\n        gath",
"er_send_buffer_count_max|\n        message_size_max|\n        allow_interfaces_list|\n        deny_interfaces_list|\n        allow_multicast_interfaces_list|\n        deny_multicast_interfaces_list|\n        send_socket_buffer_size|\n        recv_socket_buffer_size|\n        unicast_enabled|\n        multicast_enabled|\n        multicast_ttl|\n        multicast_loopback_disabled|\n        ignore_loopback_interface|\n        use_zero_copy|\n        send_blocking|\n        enable_v4mapped|\n        transport_priority_mask|\n        transport_priority_mapping_low|\n        transport_priority_mapping_high|\n        send_ping|\n        interface_poll_period|\n        reuse_multicast_receive_resource|\n        protocol_overhead_max|\n        disable_interface_tracking|\n        public_address)>\n\n<!-- !!!!!Qos Policies Values!!!!! --> \n \n<!ELEMENT value (#PCDATA|element)*> \n\n<!ELEMENT tags (#PCDATA|element)*>\n\n<!ELEMENT autoenable_created_entities (#PCDATA)> \n \n<!ELEMENT participant_id (#PCDATA)> \n \n<!ELEMENT rtps_auto_id_kind (#PCDATA)>\n\n",
"<!ELEMENT rtps_host_id (#PCDATA)> \n \n<!ELEMENT rtps_app_id (#PCDATA)> \n \n<!ELEMENT rtps_instance_id (#PCDATA)> \n \n<!ELEMENT rtps_well_known_ports (port_base| \n                                 domain_id_gain| \n      				 participant_id_gain| \n      				 builtin_multicast_port_offset| \n      				 builtin_unicast_port_offset| \n      				 user_multicast_port_offset| \n      				 user_unicast_port_offset)*> \n\n<!ELEMENT compute_crc (#PCDATA)>\n\n<!ELEMENT check_crc (#PCDATA)>       				 \n\n<!ELEMENT port_base (#PCDATA)> \n \n<!ELEMENT domain_id_gain (#PCDATA)> \n \n<!ELEMENT participant_id_gain (#PCDATA)> \n \n<!ELEMENT builtin_multicast_port_offset (#PCDATA)> \n \n<!ELEMENT builtin_unicast_port_offset (#PCDATA)> \n \n<!ELEMENT user_multicast_port_offset (#PCDATA)> \n \n<!ELEMENT user_unicast_port_offset (#PCDATA)> \n\n<!ELEMENT rtps_reserved_port_mask (#PCDATA)>\n\n<!ELEMENT mask (#PCDATA)> \n\n<!ELEMENT verbosity (#PCDATA)>\n\n<!ELEMENT category (#PCDATA)> \n\n<!ELEMENT print_format (#PCDATA)>\n\n<!ELEMENT output_file (#PCDATA)>\n\n<!ELEMENT ",
"output_file_suffix (#PCDATA)>\n\n<!ELEMENT max_bytes_per_file (#PCDATA)>\n\n<!ELEMENT max_files (#PCDATA)> \n\n<!ELEMENT element (#PCDATA|addresses|topic_expression|mapping_function|receive_port|transports|name|value|propagate|receive_address|\n                   domain_filter|type_config|path|file_name|type|register_top_level|max_string|\n                   max_sequence|type_name|registered_type_name|topics|priority|\n                   filter_expression|kind|port|address|multicast_settings|encapsulations|\n                   role_name|topic_name|quorum_count|property|\n                   flags|net_mask|interface_name)*>\n \n<!ELEMENT receive_port (#PCDATA)> \n \n<!ELEMENT transports (element)*> \n\n<!ELEMENT allow_interfaces_list (element)*>\n\n<!ELEMENT deny_interfaces_list (element)*>\n\n<!ELEMENT allow_multicast_interfaces_list (element)*>\n\n<!ELEMENT deny_multicast_interfaces_list (element)*>\n\n<!ELEMENT interface_table (element)*>\n\n<!ELEMENT addresses (#PCDATA)*> \n\n<!ELEMENT topic_expression (#PCDATA)*> \n\n<!ELEMENT mapping_f",
"unction (dll|function_name)*>\n\n<!ELEMENT dll (#PCDATA)*> \n\n<!ELEMENT function_name (#PCDATA)*> \n\n<!ELEMENT encapsulations (element)*> \n \n<!ELEMENT enabled_transports (element)*> \n \n<!ELEMENT initial_peers (#PCDATA|element)*> \n\n<!ELEMENT multicast_receive_addresses (element)*> \n \n<!ELEMENT metatraffic_transport_priority (#PCDATA)> \n \n<!ELEMENT accept_unknown_peers (#PCDATA)> \n \n<!ELEMENT enable_endpoint_discovery (#PCDATA)> \n \n<!ELEMENT local_writer_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT initial_count (#PCDATA)> \n \n<!ELEMENT max_count (#PCDATA)> \n \n<!ELEMENT incremental_count (#PCDATA)> \n \n<!ELEMENT local_reader_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT local_publisher_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT local_subscriber_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT local_topic_allocation (initial_count|max_count|incremental_count)*>\n\n<!ELEMENT local_type_allocation (max_count)*>\n \n<!ELEMENT rem",
"ote_writer_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT remote_reader_allocation (initial_count|max_count|incremental_count)*> \n\n<!ELEMENT remote_topic_query_allocation (initial_count|max_count|incremental_count)*>\n\n<!ELEMENT remote_participant_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT matching_writer_reader_pair_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT matching_reader_writer_pair_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT ignored_entity_allocation (initial_count|max_count|incremental_count)*>\n\n<!ELEMENT ignored_entity_replacement_kind (#PCDATA)>\n \n<!ELEMENT content_filtered_topic_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT content_filter_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT read_condition_allocation (initial_count|max_count|incremental_count)*> \n\n<!ELEMENT query_condition_allocation (initial_count|max_count|incremental_count)*>\n \n<!ELEMENT out",
"standing_asynchronous_sample_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT flow_controller_allocation (initial_count|max_count|incremental_count)*> \n \n<!ELEMENT local_writer_hash_buckets (#PCDATA)> \n \n<!ELEMENT local_reader_hash_buckets (#PCDATA)> \n \n<!ELEMENT local_publisher_hash_buckets (#PCDATA)> \n \n<!ELEMENT local_subscriber_hash_buckets (#PCDATA)> \n\n<!ELEMENT local_topic_hash_buckets (#PCDATA)> \n \n<!ELEMENT remote_writer_hash_buckets (#PCDATA)> \n \n<!ELEMENT remote_reader_hash_buckets (#PCDATA)> \n\n<!ELEMENT remote_topic_query_hash_buckets (#PCDATA)>\n\n<!ELEMENT remote_participant_hash_buckets (#PCDATA)> \n \n<!ELEMENT matching_writer_reader_pair_hash_buckets (#PCDATA)> \n \n<!ELEMENT matching_reader_writer_pair_hash_buckets (#PCDATA)> \n \n<!ELEMENT ignored_entity_hash_buckets (#PCDATA)> \n \n<!ELEMENT content_filtered_topic_hash_buckets (#PCDATA)> \n \n<!ELEMENT content_filter_hash_buckets (#PCDATA)> \n \n<!ELEMENT flow_controller_hash_buckets (#PCDATA)> \n \n<!ELEMENT max_gather_destinations (#",
"PCDATA)> \n \n<!ELEMENT participant_user_data_max_length (#PCDATA)> \n \n<!ELEMENT topic_data_max_length (#PCDATA)> \n\n<!ELEMENT publisher_group_data_max_length (#PCDATA)> \n \n<!ELEMENT subscriber_group_data_max_length (#PCDATA)> \n \n<!ELEMENT writer_user_data_max_length (#PCDATA)> \n \n<!ELEMENT reader_user_data_max_length (#PCDATA)> \n \n<!ELEMENT max_partitions (#PCDATA)> \n \n<!ELEMENT max_partition_cumulative_characters (#PCDATA)> \n \n<!ELEMENT type_code_max_serialized_length (#PCDATA)> \n\n<!ELEMENT type_object_max_serialized_length (#PCDATA)> \n\n<!ELEMENT serialized_type_object_dynamic_allocation_threshold (#PCDATA)> \n\n<!ELEMENT type_object_max_deserialized_length (#PCDATA)> \n\n<!ELEMENT deserialized_type_object_dynamic_allocation_threshold (#PCDATA)> \n \n<!ELEMENT contentfilter_property_max_length (#PCDATA)> \n \n<!ELEMENT participant_property_list_max_length (#PCDATA)> \n \n<!ELEMENT participant_property_string_max_length (#PCDATA)> \n \n<!ELEMENT writer_property_list_max_length (#PCDATA)> \n \n<!ELEMENT writer_property_string",
"_max_length (#PCDATA)> \n \n<!ELEMENT reader_property_list_max_length (#PCDATA)> \n\n<!ELEMENT reader_property_string_max_length (#PCDATA)> \n\n<!ELEMENT writer_data_tag_list_max_length (#PCDATA)>\n \n<!ELEMENT writer_data_tag_string_max_length (#PCDATA)>\n \n<!ELEMENT reader_data_tag_list_max_length (#PCDATA)>\n\n<!ELEMENT reader_data_tag_string_max_length (#PCDATA)>\n\n<!ELEMENT shmem_ref_transfer_mode_max_segments (#PCDATA)>\n\n<!ELEMENT max_receive_ports (#PCDATA)>\n\n<!ELEMENT max_destination_ports (#PCDATA)>\n\n<!ELEMENT type_signature_list_max_length (#PCDATA)>\n\n<!ELEMENT type_signature_string_max_length (#PCDATA)>\n\n<!ELEMENT asynchronous_batch_thread (mask|priority|stack_size|cpu_list|cpu_rotation)*>\n\n<!ELEMENT thread (mask|priority|stack_size|cpu_list|cpu_rotation)*>\n\n<!ELEMENT recv_thread (mask|priority|stack_size|cpu_list|cpu_rotation)*>\n\n<!ELEMENT topic_query_publication_thread (mask|priority|stack_size|cpu_list|cpu_rotation)*>\n \n<!ELEMENT priority (#PCDATA)> \n \n<!ELEMENT stack_size (#PCDATA)> \n\n<!ELEMENT cpu_list (e",
"lement)*> \n\n<!ELEMENT cpu_rotation (#PCDATA)> \n \n<!ELEMENT buffer_size (#PCDATA)> \n \n<!ELEMENT buffer_alignment (#PCDATA)> \n \n<!ELEMENT shutdown_timeout (sec|nanosec)*> \n \n<!ELEMENT sec (#PCDATA)> \n \n<!ELEMENT nanosec (#PCDATA)> \n \n<!ELEMENT cleanup_period (sec|nanosec)*> \n \n<!ELEMENT shutdown_cleanup_period (sec|nanosec)*> \n \n<!ELEMENT initial_records (#PCDATA)> \n \n<!ELEMENT max_skiplist_level (#PCDATA)> \n\n<!ELEMENT max_weak_references (#PCDATA)> \n \n<!ELEMENT initial_weak_references (#PCDATA)> \n \n<!ELEMENT participant_liveliness_lease_duration (sec|nanosec)*> \n \n<!ELEMENT participant_liveliness_assert_period (sec|nanosec)*> \n \n<!ELEMENT remote_participant_purge_kind (#PCDATA)> \n \n<!ELEMENT max_liveliness_loss_detection_period (sec|nanosec)*> \n\n<!ELEMENT initial_participant_announcements (#PCDATA)>\n\n<!ELEMENT min_initial_participant_announcement_period (sec|nanosec)*>\n\n<!ELEMENT max_initial_participant_announcement_period (sec|nanosec)*>\n \n<!ELEMENT participant_reader_resource_limits (initial_samples|max_samp",
"les| \n                                         initial_infos|max_infos| \n                                         initial_outstanding_reads|max_outstanding_reads| \n                                         max_samples_per_read|disable_fragmentation_support|max_fragmented_samples|\n                                         initial_fragmented_samples|max_fragmented_samples_per_remote_writer|\n                                         max_fragments_per_sample|dynamically_allocate_fragmented_samples)*>\n \n<!ELEMENT initial_samples (#PCDATA)> \n \n<!ELEMENT max_samples (#PCDATA)> \n\n<!ELEMENT initial_infos (#PCDATA)> \n \n<!ELEMENT max_infos (#PCDATA)> \n \n<!ELEMENT initial_outstanding_reads (#PCDATA)> \n \n<!ELEMENT max_outstanding_reads (#PCDATA)> \n \n<!ELEMENT max_samples_per_read (#PCDATA)> \n \n<!ELEMENT receive_window_size (#PCDATA)> \n\n<!ELEMENT round_trip_time (sec|nanosec)*> \n \n<!ELEMENT publication_reader (min_heartbeat_response_delay|max_heartbeat_response_delay| \n			      heartbeat_suppression_duration|nack_period|recei",
"ve_window_size|round_trip_time|\n                               app_ack_period|min_app_ack_response_keep_duration|samples_per_app_ack)*> \n \n<!ELEMENT min_heartbeat_response_delay (sec|nanosec)*> \n \n<!ELEMENT max_heartbeat_response_delay (sec|nanosec)*> \n \n<!ELEMENT heartbeat_suppression_duration (sec|nanosec)*> \n\n<!ELEMENT nack_period (sec|nanosec)*> \n\n<!ELEMENT app_ack_period (sec|nanosec)*>\n\n<!ELEMENT min_app_ack_response_keep_duration (sec|nanosec)*>\n\n<!ELEMENT samples_per_app_ack (#PCDATA)>\n \n<!ELEMENT publication_reader_resource_limits (initial_samples|max_samples| \n                                              initial_infos|max_infos| \n                                              initial_outstanding_reads|max_outstanding_reads| \n                                              max_samples_per_read|disable_fragmentation_support|max_fragmented_samples|\n                                              initial_fragmented_samples|max_fragmented_samples_per_remote_writer|\n                                           ",
"   max_fragments_per_sample|dynamically_allocate_fragmented_samples)*>\n\n<!ELEMENT subscription_reader (min_heartbeat_response_delay|max_heartbeat_response_delay| \n                               heartbeat_suppression_duration|nack_period|\n                               receive_window_size|round_trip_time|\n                               app_ack_period|min_app_ack_response_keep_duration|samples_per_app_ack)*> \n \n<!ELEMENT subscription_reader_resource_limits (initial_samples|max_samples| \n                                               initial_infos|max_infos| \n                                               initial_outstanding_reads|max_outstanding_reads| \n                                               max_samples_per_read|disable_fragmentation_support|max_fragmented_samples|\n                                               initial_fragmented_samples|max_fragmented_samples_per_remote_writer|\n                                               max_fragments_per_sample|dynamically_allocate_fragmented_samples)*>\n \n<!ELEMENT",
" participant_message_reader_reliability_kind (#PCDATA)>\n\n<!ELEMENT participant_message_reader (min_heartbeat_response_delay|max_heartbeat_response_delay| \n                               heartbeat_suppression_duration|nack_period|\n                               receive_window_size|round_trip_time|\n                               app_ack_period|min_app_ack_response_keep_duration|samples_per_app_ack)*> \n\n<!ELEMENT participant_proxy_reader (min_heartbeat_response_delay|max_heartbeat_response_delay|\n                              heartbeat_suppression_duration|nack_period|\n                              receive_window_size|round_trip_time|\n                              app_ack_period|min_app_ack_response_keep_duration|samples_per_app_ack)*>\n\n<!ELEMENT publication_writer (low_watermark|high_watermark|heartbeat_period| \n                              fast_heartbeat_period|late_joiner_heartbeat_period| \n                              virtual_heartbeat_period|samples_per_virtual_heartbeat|\n                              max",
"_heartbeat_retries|inactivate_nonprogressing_readers|\n                              heartbeats_per_max_samples| \n                              min_nack_response_delay|max_nack_response_delay|\n                              disable_positive_acks_min_sample_keep_duration|\n                              disable_positive_acks_max_sample_keep_duration|\n                              disable_positive_acks_sample_min_separation|\n                              disable_positive_acks_decrease_sample_keep_duration_factor|\n                              disable_positive_acks_increase_sample_keep_duration_factor|\n                              disable_positive_acks_enable_adaptive_sample_keep_duration|\n                              disable_positive_acks_enable_spin_wait|\n                              nack_suppression_duration|max_bytes_per_nack_response|\n                              min_send_window_size|max_send_window_size|\n                              send_window_update_period|send_window_increase_factor|\n                  ",
"            send_window_decrease_factor|\n                              enable_multicast_periodic_heartbeat|multicast_resend_threshold)*> \n\n<!ELEMENT publication_writer_data_lifecycle (autodispose_unregistered_instances|\n                                             autopurge_unregistered_instances_delay|\n                                             autopurge_disposed_instances_delay)*>\n \n<!ELEMENT low_watermark (#PCDATA)> \n \n<!ELEMENT high_watermark (#PCDATA)> \n \n<!ELEMENT heartbeat_period (sec|nanosec)*> \n \n<!ELEMENT fast_heartbeat_period (sec|nanosec)*> \n\n<!ELEMENT virtual_heartbeat_period (sec|nanosec)*>\n\n<!ELEMENT samples_per_virtual_heartbeat (#PCDATA)>\n \n<!ELEMENT late_joiner_heartbeat_period (sec|nanosec)*> \n \n<!ELEMENT max_heartbeat_retries (#PCDATA)> \n\n<!ELEMENT inactivate_nonprogressing_readers (#PCDATA)> \n\n<!ELEMENT heartbeats_per_max_samples (#PCDATA)>\n\n<!ELEMENT disable_positive_acks_decrease_sample_keep_duration_factor (#PCDATA)>\n\n<!ELEMENT disable_positive_acks_increase_sample_keep_duration_fact",
"or (#PCDATA)>\n\n<!ELEMENT disable_positive_acks_enable_adaptive_sample_keep_duration (#PCDATA)>\n\n<!ELEMENT disable_positive_acks_enable_spin_wait (#PCDATA)>\n\n<!ELEMENT min_nack_response_delay (sec|nanosec)*> \n \n<!ELEMENT max_nack_response_delay (sec|nanosec)*> \n\n<!ELEMENT disable_positive_acks_min_sample_keep_duration (sec|nanosec)*> \n\n<!ELEMENT disable_positive_acks_max_sample_keep_duration (sec|nanosec)*> \n\n<!ELEMENT disable_positive_acks_sample_min_separation (sec|nanosec)*> \n \n<!ELEMENT nack_suppression_duration (sec|nanosec)*> \n \n<!ELEMENT max_bytes_per_nack_response (#PCDATA)> \n\n<!ELEMENT send_window_update_period (sec|nanosec)*> \n\n<!ELEMENT min_send_window_size (#PCDATA)> \n\n<!ELEMENT max_send_window_size (#PCDATA)> \n\n<!ELEMENT send_window_increase_factor (#PCDATA)> \n\n<!ELEMENT send_window_decrease_factor (#PCDATA)>\n \n<!ELEMENT enable_multicast_periodic_heartbeat (#PCDATA)>\n\n<!ELEMENT multicast_resend_threshold (#PCDATA)>\n \n<!ELEMENT subscription_writer (low_watermark|high_watermark|heartbeat_period| \n  ",
"                            fast_heartbeat_period|late_joiner_heartbeat_period| \n                              virtual_heartbeat_period|samples_per_virtual_heartbeat|\n                              max_heartbeat_retries|inactivate_nonprogressing_readers|\n                              heartbeats_per_max_samples| \n                              min_nack_response_delay|max_nack_response_delay|\n                              disable_positive_acks_min_sample_keep_duration|\n                              disable_positive_acks_max_sample_keep_duration|\n                              disable_positive_acks_sample_min_separation|\n                              disable_positive_acks_decrease_sample_keep_duration_factor|\n                              disable_positive_acks_increase_sample_keep_duration_factor|\n                              disable_positive_acks_enable_adaptive_sample_keep_duration|\n                              disable_positive_acks_enable_spin_wait|\n                              nack_suppression_duration|max_b",
"ytes_per_nack_response|\n                              min_send_window_size|max_send_window_size|\n                              send_window_update_period|send_window_increase_factor|\n                              send_window_decrease_factor|\n                              enable_multicast_periodic_heartbeat|multicast_resend_threshold)*> \n\n<!ELEMENT subscription_writer_data_lifecycle (autodispose_unregistered_instances|\n                                             autopurge_unregistered_instances_delay|\n                                             autopurge_disposed_instances_delay)*>\n \n<!ELEMENT participant_message_writer (low_watermark|high_watermark|heartbeat_period| \n                              fast_heartbeat_period|late_joiner_heartbeat_period| \n                              virtual_heartbeat_period|samples_per_virtual_heartbeat|\n                              max_heartbeat_retries|inactivate_nonprogressing_readers|\n                              heartbeats_per_max_samples| \n                              mi",
"n_nack_response_delay|max_nack_response_delay|\n                              disable_positive_acks_min_sample_keep_duration|\n                              disable_positive_acks_max_sample_keep_duration|\n                              disable_positive_acks_sample_min_separation|\n                              disable_positive_acks_decrease_sample_keep_duration_factor|\n                              disable_positive_acks_increase_sample_keep_duration_factor|\n                              disable_positive_acks_enable_adaptive_sample_keep_duration|\n                              disable_positive_acks_enable_spin_wait|\n                              nack_suppression_duration|max_bytes_per_nack_response|\n                              min_send_window_size|max_send_window_size|\n                              send_window_update_period|send_window_increase_factor|\n                              send_window_decrease_factor|\n                              enable_multicast_periodic_heartbeat|multicast_resend_threshold)*> \n\n<!ELEM",
"ENT participant_state_writer (low_watermark|high_watermark|heartbeat_period|\n                             fast_heartbeat_period|late_joiner_heartbeat_period|\n                             virtual_heartbeat_period|samples_per_virtual_heartbeat|\n                             max_heartbeat_retries|inactivate_nonprogressing_readers|\n                             heartbeats_per_max_samples|\n                             min_nack_response_delay|max_nack_response_delay|\n                             disable_positive_acks_min_sample_keep_duration|\n                             disable_positive_acks_max_sample_keep_duration|\n                             disable_positive_acks_sample_min_separation|\n                             disable_positive_acks_enable_adaptive_sample_keep_duration|\n                             disable_positive_acks_enable_spin_wait|\n                             disable_positive_acks_decrease_sample_keep_duration_factor|\n                             disable_positive_acks_increase_sample_keep_duration_fact",
"or|\n                             nack_suppression_duration|max_bytes_per_nack_response|\n                             min_send_window_size|max_send_window_size|\n                             send_window_update_period|send_window_increase_factor|\n                             send_window_decrease_factor|\n                             enable_multicast_periodic_heartbeat|multicast_resend_threshold)*>\n \n<!ELEMENT max_participant_locators (#PCDATA)>\n\n<!ELEMENT max_locators_per_discovered_participant (#PCDATA)>\n\n<!ELEMENT cache_serialized_samples (#PCDATA)>\n\n<!ELEMENT builtin_discovery_plugins (#PCDATA)> \n \n<!ELEMENT name (#PCDATA|element)*> \n<!ATTLIST name xsi:nil CDATA #IMPLIED> \n \n<!ELEMENT propagate (#PCDATA)> \n \n<!ELEMENT kind (#PCDATA)> \n \n<!ELEMENT direct_communication (#PCDATA)> \n\n<!ELEMENT service_cleanup_delay (sec|nanosec)*> \n \n<!ELEMENT history_kind (#PCDATA)> \n \n<!ELEMENT history_depth (#PCDATA)> \n \n<!ELEMENT max_instances (#PCDATA)> \n \n<!ELEMENT max_samples_per_instance (#PCDATA)> \n \n<!ELEMENT initial_ins",
"tances (#PCDATA)> \n\n<!ELEMENT instance_hash_buckets (#PCDATA)>\n \n<!ELEMENT period (sec|nanosec)*> \n \n<!ELEMENT duration (sec|nanosec)*> \n \n<!ELEMENT lease_duration (sec|nanosec)*> \n\n<!ELEMENT assertions_per_lease_duration (#PCDATA)>\n \n<!ELEMENT max_blocking_time (sec|nanosec)*> \n\n<!ELEMENT acknowledgment_kind (#PCDATA)>\n\n<!ELEMENT source_timestamp_tolerance (sec|nanosec)*> \n\n<!ELEMENT scope (#PCDATA)> \n \n<!ELEMENT depth (#PCDATA)> \n \n<!ELEMENT refilter (#PCDATA)> \n \n<!ELEMENT access_scope (#PCDATA)> \n\n<!ELEMENT coherent_access (#PCDATA)> \n \n<!ELEMENT ordered_access (#PCDATA)> \n \n<!ELEMENT disable_asynchronous_write (#PCDATA)> \n\n<!ELEMENT disable_asynchronous_batch (#PCDATA)>\n\n<!ELEMENT disable_topic_query_publication (#PCDATA)>\n\n<!ELEMENT asynchronous_batch_blocking_kind (#PCDATA)>\n\n<!ELEMENT use_shared_exclusive_area (#PCDATA)> \n \n<!ELEMENT initial_concurrent_blocking_threads (#PCDATA)> \n \n<!ELEMENT max_concurrent_blocking_threads (#PCDATA)> \n \n<!ELEMENT max_remote_reader_filters (#PCDATA)> \n\n<!ELEMENT initi",
"al_batches (#PCDATA)> \n\n<!ELEMENT max_batches (#PCDATA)> \n\n<!ELEMENT autoregister_instances (#PCDATA)> \n\n<!ELEMENT initial_virtual_writers (#PCDATA)> \n\n<!ELEMENT max_virtual_writers (#PCDATA)> \n\n<!ELEMENT max_remote_readers (#PCDATA)> \n\n<!ELEMENT max_app_ack_remote_readers (#PCDATA)>\n\n<!ELEMENT max_routes_per_reader (#PCDATA)>\n\n<!ELEMENT instance_replacement (#PCDATA)> \n\n<!ELEMENT replace_empty_instances (#PCDATA)> \n \n<!ELEMENT virtual_guid (value)> \n \n<!ELEMENT rtps_object_id (#PCDATA)> \n \n<!ELEMENT push_on_write (#PCDATA)> \n \n<!ELEMENT rtps_reliable_writer (low_watermark|high_watermark|heartbeat_period| \n                                fast_heartbeat_period|late_joiner_heartbeat_period| \n                                virtual_heartbeat_period|samples_per_virtual_heartbeat|\n                                max_heartbeat_retries|inactivate_nonprogressing_readers|\n                                heartbeats_per_max_samples| \n                                min_nack_response_delay|max_nack_response_delay|\n      ",
"                          disable_positive_acks_min_sample_keep_duration|\n                                disable_positive_acks_max_sample_keep_duration|\n                                disable_positive_acks_sample_min_separation|\n                                disable_positive_acks_decrease_sample_keep_duration_factor|\n                                disable_positive_acks_increase_sample_keep_duration_factor|\n                                disable_positive_acks_enable_adaptive_sample_keep_duration|\n                                disable_positive_acks_enable_spin_wait|\n                                nack_suppression_duration|max_bytes_per_nack_response|\n                                min_send_window_size|max_send_window_size|\n                                send_window_update_period|send_window_increase_factor|\n                                send_window_decrease_factor|\n                                enable_multicast_periodic_heartbeat|multicast_resend_threshold)*> \n\n<!ELEMENT plugin_data (#PCDATA)> \n\n",
"<!ELEMENT cdr_padding_kind (#PCDATA)> \n \n<!ELEMENT autodispose_unregistered_instances (#PCDATA)> \n \n<!ELEMENT autopurge_unregistered_instances_delay (sec|nanosec)*> \n \n<!ELEMENT flow_controller_name (#PCDATA)> \n \n<!ELEMENT minimum_separation (sec|nanosec)*> \n \n<!ELEMENT autopurge_nowriter_samples_delay (sec|nanosec)*> \n \n<!ELEMENT autopurge_disposed_samples_delay (sec|nanosec)*> \n\n<!ELEMENT autopurge_disposed_instances_delay (sec|nanosec)*> \n \n<!ELEMENT max_remote_writers (#PCDATA)> \n \n<!ELEMENT max_remote_writers_per_instance (#PCDATA)>\n \n<!ELEMENT max_samples_per_remote_writer (#PCDATA)>\n\n<!ELEMENT max_routes_per_writer (#PCDATA)>\n \n<!ELEMENT initial_remote_writers (#PCDATA)> \n \n<!ELEMENT initial_remote_writers_per_instance (#PCDATA)> \n \n<!ELEMENT disable_fragmentation_support (#PCDATA)> \n \n<!ELEMENT max_fragmented_samples (#PCDATA)> \n\n<!ELEMENT initial_fragmented_samples (#PCDATA)> \n \n<!ELEMENT max_fragmented_samples_per_remote_writer (#PCDATA)> \n \n<!ELEMENT max_fragments_per_sample (#PCDATA)> \n \n<!ELEMENT",
" dynamically_allocate_fragmented_samples (#PCDATA)> \n\n<!ELEMENT max_total_instances (#PCDATA)> \n \n<!ELEMENT rtps_reliable_reader (min_heartbeat_response_delay|max_heartbeat_response_delay| \n                                heartbeat_suppression_duration|nack_period|\n                                receive_window_size|round_trip_time|\n                                app_ack_period|min_app_ack_response_keep_duration|samples_per_app_ack)>\n \n<!ELEMENT receive_address (#PCDATA)>\n\n<!ELEMENT disable_positive_acks (#PCDATA)>\n\n<!ELEMENT disable_inline_keyhash (#PCDATA)>\n\n<!ELEMENT serialize_key_with_dispose (#PCDATA)>\n\n<!ELEMENT expects_inline_qos (#PCDATA)>\n\n<!ELEMENT initial_virtual_sequence_number (high|low|value)>\n\n<!ELEMENT high (#PCDATA)>\n\n<!ELEMENT low (#PCDATA)>\n\n<!ELEMENT propagate_dispose_of_unregistered_instances (#PCDATA)>\n\n<!ELEMENT propagate_unregister_of_disposed_instances (#PCDATA)>\n\n<!ELEMENT propagate_app_ack_with_no_response (#PCDATA)>\n\n<!ELEMENT enable (#PCDATA)>\n\n<!ELEMENT max_data_bytes (#PCDATA)>",
"\n\n<!ELEMENT max_meta_data_bytes (#PCDATA)>\n\n<!ELEMENT max_flush_delay (sec|nanosec)*>\n\n<!ELEMENT source_timestamp_resolution (sec|nanosec)*>\n\n<!ELEMENT thread_safe_write (#PCDATA)>\n\n<!ELEMENT channels (element)*>\n\n<!ELEMENT filter_name (#PCDATA)>\n\n<!ELEMENT filter_expression (#PCDATA)>\n\n<!ELEMENT multicast_settings (element)*>\n\n<!ELEMENT port (#PCDATA)>\n\n<!ELEMENT address (#PCDATA)>\n\n<!ELEMENT channel_seq_max_length (#PCDATA)>\n\n<!ELEMENT channel_filter_expression_max_length (#PCDATA)>\n\n<!ELEMENT max_remote_virtual_writers (#PCDATA)>\n\n<!ELEMENT initial_remote_virtual_writers (#PCDATA)>\n\n<!ELEMENT max_remote_virtual_writers_per_instance (#PCDATA)>\n\n<!ELEMENT initial_remote_virtual_writers_per_instance (#PCDATA)>\n\n<!ELEMENT max_remote_writers_per_sample (#PCDATA)>\n\n<!ELEMENT max_query_condition_filters (#PCDATA)>\n\n<!ELEMENT max_app_ack_response_length (#PCDATA)>\n\n<!ELEMENT max_data_availability_waiting_time (sec|nanosec)*>\n\n<!ELEMENT max_endpoint_availability_waiting_time (sec|nanosec)*>\n\n<!ELEMENT required_matc",
"hed_endpoint_groups (element)*>\n\n<!ELEMENT role_name (#PCDATA)>\n<!ATTLIST role_name xsi:nil CDATA #IMPLIED> \n\n<!ELEMENT topic_name (#PCDATA)>\n\n<!ELEMENT quorum_count (#PCDATA)>\n\n<!ELEMENT max_endpoint_groups (#PCDATA)>\n\n<!ELEMENT max_endpoint_group_cumulative_characters (#PCDATA)>\n\n<!ELEMENT transport_info_list_max_length (#PCDATA)>\n\n<!ELEMENT ignore_sequence_bounds (#PCDATA)>\n<!ELEMENT ignore_string_bounds (#PCDATA)>\n<!ELEMENT ignore_member_names (#PCDATA)>\n<!ELEMENT prevent_type_widening (#PCDATA)>\n<!ELEMENT force_type_validation (#PCDATA)>\n<!ELEMENT ignore_enum_literal_names (#PCDATA)>\n\n<!ELEMENT type_consistency (\n    kind\n    | ignore_sequence_bounds\n    | ignore_string_bounds\n    | ignore_member_names\n    | prevent_type_widening\n    | force_type_validation\n    | ignore_enum_literal_names\n)>\n\n<!ELEMENT service (kind)>\n\n<!ELEMENT keep_minimum_state_for_instances (#PCDATA)> \n\n<!ELEMENT initial_topic_queries (#PCDATA)>\n\n<!ELEMENT max_topic_queries (#PCDATA)>\n\n<!ELEMENT shmem_ref_transfer_mode_attached_segme",
"nt_allocation (initial_count|max_count|incremental_count)*>\n\n<!ELEMENT initial_active_topic_queries (#PCDATA)>\n\n<!ELEMENT max_active_topic_queries (#PCDATA)>\n\n<!ELEMENT writer_loaned_sample_allocation (initial_count|max_count|incremental_count)*>\n\n<!ELEMENT initialize_writer_loaned_sample (#PCDATA)>\n\n<!ELEMENT samples_per_period (#PCDATA)>\n\n<!ELEMENT publication_period (sec|nanosec)*>\n\n<!ELEMENT service_request_writer (low_watermark|high_watermark|heartbeat_period| \n                              fast_heartbeat_period|late_joiner_heartbeat_period| \n                              virtual_heartbeat_period|samples_per_virtual_heartbeat|\n                              max_heartbeat_retries|inactivate_nonprogressing_readers|\n                              heartbeats_per_max_samples| \n                              min_nack_response_delay|max_nack_response_delay|\n                              disable_positive_acks_min_sample_keep_duration|\n                              disable_positive_acks_max_sample_keep_duration|\n   ",
"                           disable_positive_acks_sample_min_separation|\n                              disable_positive_acks_decrease_sample_keep_duration_factor|\n                              disable_positive_acks_increase_sample_keep_duration_factor|\n                              disable_positive_acks_enable_adaptive_sample_keep_duration|\n                              disable_positive_acks_enable_spin_wait|\n                              nack_suppression_duration|max_bytes_per_nack_response|\n                              min_send_window_size|max_send_window_size|\n                              send_window_update_period|send_window_increase_factor|\n                              send_window_decrease_factor|\n                              enable_multicast_periodic_heartbeat|multicast_resend_threshold)*> \n\n<!ELEMENT service_request_writer_data_lifecycle (autodispose_unregistered_instances|\n                                                 autopurge_unregistered_instances_delay|\n                                      ",
"           autopurge_disposed_instances_delay)*>\n\n<!ELEMENT service_request_reader (min_heartbeat_response_delay|max_heartbeat_response_delay| \n			           heartbeat_suppression_duration|nack_period|receive_window_size|round_trip_time|\n                                  app_ack_period|min_app_ack_response_keep_duration|samples_per_app_ack)*> \n\n<!ELEMENT received_message_count_max (#PCDATA)>\n\n<!ELEMENT receive_buffer_size (#PCDATA)>\n\n<!ELEMENT message_size_max (#PCDATA)>\n\n<!ELEMENT address_bit_count (#PCDATA)>\n\n<!ELEMENT properties_bitmap (#PCDATA)>\n\n<!ELEMENT gather_send_buffer_count_max (#PCDATA)>\n\n<!ELEMENT host_id (#PCDATA)>\n\n<!ELEMENT use_530_from_uuid_locator (#PCDATA)>\n\n<!ELEMENT send_socket_buffer_size (#PCDATA)>\n\n<!ELEMENT recv_socket_buffer_size (#PCDATA)>\n\n<!ELEMENT multicast_ttl (#PCDATA)>\n\n<!ELEMENT multicast_interface (#PCDATA)>\n\n<!ELEMENT is_default_interface (#PCDATA)>\n\n<!ELEMENT disable_auto_interface_config (#PCDATA)>\n\n<!ELEMENT unicast_enabled (#PCDATA)>\n\n<!ELEMENT multicast_enabled (#PCDAT",
"A)>\n\n<!ELEMENT multicast_loopback_disabled (#PCDATA)>\n\n<!ELEMENT ignore_loopback_interface (#PCDATA)>\n\n<!ELEMENT use_zero_copy (#PCDATA)>\n\n<!ELEMENT send_blocking (#PCDATA)>\n\n<!ELEMENT transport_priority_mask (#PCDATA)>\n\n<!ELEMENT transport_priority_mapping_low (#PCDATA)>\n\n<!ELEMENT transport_priority_mapping_high (#PCDATA)>\n\n<!ELEMENT interface_poll_period (#PCDATA)>\n\n<!ELEMENT reuse_multicast_receive_resource (#PCDATA)>\n\n<!ELEMENT protocol_overhead_max (#PCDATA)>\n\n<!ELEMENT disable_interface_tracking (#PCDATA)>\n\n<!ELEMENT public_address (#PCDATA)>\n\n<!ELEMENT use_checksum (#PCDATA)>\n\n<!ELEMENT flags (#PCDATA)>\n\n<!ELEMENT net_mask (#PCDATA)>\n\n<!ELEMENT interface_name (#PCDATA)>\n\n<!ELEMENT enable_v4mapped (#PCDATA)>\n\n<!ELEMENT send_ping (#PCDATA)>\n\n \n<!ELEMENT types (include|const|directive|struct|valuetype|\n		sparse_valuetype|union|typedef|module|enum|bitset|forward_dcl)+>\n<!ATTLIST types xmlns:xsi CDATA #IMPLIED>\n<!ATTLIST types xsi:noNamespaceSchemaLocation CDATA #IMPLIED>\n<!ATTLIST types name CDATA #IMPLIE",
"D>\n\n<!ELEMENT type_library (include|const|directive|struct|valuetype|\n                        sparse_valuetype|union|typedef|module|enum|bitset|forward_dcl)+>\n<!ATTLIST type_library xmlns:xsi CDATA #IMPLIED>\n<!ATTLIST type_library xsi:noNamespaceSchemaLocation CDATA #IMPLIED>\n<!ATTLIST type_library name CDATA #IMPLIED>\n\n<!ELEMENT module (include|const|directive|struct|union|\n      		typedef|module|enum|valuetype|sparse_valuetype|bitset|forward_dcl)+>\n<!ATTLIST module name NMTOKEN #REQUIRED>\n<!ATTLIST module autoid (hash|sequential) #IMPLIED>\n<!ATTLIST module allowed_data_representation CDATA #IMPLIED>\n<!ATTLIST module languageBinding (plain|flat_data) #IMPLIED>\n<!ATTLIST module transferMode (shmem_ref|inband) #IMPLIED>\n\n<!ELEMENT valuetype (const?|member|directive?)+>\n<!ATTLIST valuetype name NMTOKEN #REQUIRED>\n<!ATTLIST valuetype extensibility CDATA #IMPLIED>\n<!ATTLIST valuetype baseClass CDATA #IMPLIED>\n<!ATTLIST valuetype typeModifier (custom|none|truncatable|abstract) #IMPLIED>\n<!ATTLIST valuetype topLeve",
"l (true|false|1|0) \"true\">\n<!ATTLIST valuetype nested (true|false|1|0) \"false\">\n<!ATTLIST valuetype resolveName (true|false|1|0) #IMPLIED>\n<!ATTLIST valuetype autoid (hash|sequential) #IMPLIED>\n<!ATTLIST valuetype allowed_data_representation CDATA #IMPLIED>\n<!ATTLIST valuetype languageBinding (plain|flat_data) #IMPLIED>\n<!ATTLIST valuetype transferMode (shmem_ref|inband) #IMPLIED>\n\n<!ELEMENT sparse_valuetype (const?|member|directive?)+>\n<!ATTLIST sparse_valuetype name NMTOKEN #REQUIRED>\n<!ATTLIST sparse_valuetype baseClass CDATA #IMPLIED>\n<!ATTLIST sparse_valuetype typeModifier (custom|none|truncatable|abstract) #IMPLIED>\n<!ATTLIST sparse_valuetype topLevel (true|false|1|0) \"true\">\n<!ATTLIST sparse_valuetype nested (true|false|1|0) \"false\">\n\n<!ELEMENT include EMPTY>\n<!ATTLIST include file CDATA #REQUIRED >\n\n<!ELEMENT struct (member|directive)+>\n<!ATTLIST struct name NMTOKEN #REQUIRED>\n<!ATTLIST struct baseType CDATA #IMPLIED>\n<!ATTLIST struct extensibility CDATA #IMPLIED>\n<!ATTLIST struct topLevel (true|false",
"|1|0) \"true\">\n<!ATTLIST struct nested (true|false|1|0) \"false\">\n<!ATTLIST struct resolveName (true|false|1|0) #IMPLIED>\n<!ATTLIST struct autoid (hash|sequential) #IMPLIED>\n<!ATTLIST struct allowed_data_representation CDATA #IMPLIED>\n<!ATTLIST struct languageBinding (plain|flat_data) #IMPLIED>\n<!ATTLIST struct transferMode (shmem_ref|inband) #IMPLIED>\n\n<!ELEMENT union (discriminator,(case|directive)+)>\n<!ATTLIST union name NMTOKEN #REQUIRED>\n<!ATTLIST union extensibility CDATA #IMPLIED>\n<!ATTLIST union allowed_data_representation CDATA #IMPLIED>\n<!ATTLIST union topLevel (true|false|1|0) \"true\">\n<!ATTLIST union nested (true|false|1|0) \"false\">\n<!ATTLIST union resolveName (true|false|1|0) #IMPLIED>\n<!ATTLIST union autoid (hash|sequential) #IMPLIED>\n<!ATTLIST union transferMode (shmem_ref|inband) #IMPLIED>\n\n<!ELEMENT const EMPTY>\n<!ATTLIST const name NMTOKEN #REQUIRED>\n<!ATTLIST const value CDATA #REQUIRED>\n<!ATTLIST const type (char|string|short|long|float|boolean|double|octet|wchar|wstring|longLong|unsignedLong",
"Long|longShort|longDouble|unsignedShort|unsignedLong|nonBasic) #REQUIRED>\n<!ATTLIST const nonBasicTypeName CDATA #IMPLIED>\n<!ATTLIST const resolveName (true|false|1|0) #IMPLIED>\n<!ATTLIST const stringMaxLength CDATA #IMPLIED>\n\n<!ELEMENT discriminator EMPTY>\n<!ATTLIST discriminator type (char|string|short|long|float|boolean|double|octet|wchar|wstring|longLong|unsignedLongLong|longShort|longDouble|unsignedShort|unsignedLong|nonBasic) #REQUIRED>\n<!ATTLIST discriminator nonBasicTypeName CDATA #IMPLIED>\n\n<!ELEMENT case ((caseDiscriminator)+,member)>\n\n<!ELEMENT caseDiscriminator EMPTY>\n<!ATTLIST caseDiscriminator value CDATA #REQUIRED>\n\n<!ELEMENT member EMPTY>\n<!ATTLIST member name NMTOKEN #IMPLIED>\n<!ATTLIST member visibility (public|private) #IMPLIED>\n<!ATTLIST member pointer (true|false|1|0) #IMPLIED>\n<!ATTLIST member external (true|false|1|0) #IMPLIED>\n<!ATTLIST member type (char|string|short|long|float|boolean|double|octet|wchar|wstring|longLong|unsignedLongLong|longShort|longDouble|unsignedShort|unsignedLong|",
"nonBasic) #REQUIRED>\n<!ATTLIST member nonBasicTypeName CDATA #IMPLIED>\n<!ATTLIST member bitField CDATA #IMPLIED>\n<!ATTLIST member stringMaxLength CDATA #IMPLIED>\n<!ATTLIST member sequenceMaxLength CDATA #IMPLIED>\n<!ATTLIST member key (true|false|1|0) \"false\">\n<!ATTLIST member resolveName (true|false|1|0) #IMPLIED>\n<!ATTLIST member arrayDimensions CDATA #IMPLIED>\n<!ATTLIST member id CDATA #IMPLIED>\n<!ATTLIST member hashid CDATA #IMPLIED>\n<!ATTLIST member optional (true|false|1|0) #IMPLIED>\n<!ATTLIST member required (true|false|1|0) #IMPLIED>\n<!ATTLIST member max CDATA #IMPLIED>\n<!ATTLIST member min CDATA #IMPLIED>\n<!ATTLIST member range CDATA #IMPLIED>\n<!ATTLIST member unit CDATA #IMPLIED>\n<!ATTLIST member mustUnderstand (true|false|1|0) #IMPLIED>\n<!ATTLIST member default CDATA #IMPLIED>\n<!ATTLIST member oneway (true|false|1|0) #IMPLIED>\n\n\n<!ELEMENT typedef EMPTY>\n<!ATTLIST typedef name NMTOKEN #REQUIRED>\n<!ATTLIST typedef type (char|string|short|long|float|boolean|double|octet|wchar|wstring|longLong|unsignedL",
"ongLong|longShort|longDouble|unsignedShort|unsignedLong|nonBasic) #REQUIRED>\n<!ATTLIST typedef nonBasicTypeName CDATA #IMPLIED>\n<!ATTLIST typedef stringMaxLength CDATA #IMPLIED>\n<!ATTLIST typedef sequenceMaxLength CDATA #IMPLIED>\n<!ATTLIST typedef pointer (true|false|1|0) #IMPLIED>\n<!ATTLIST typedef resolveName (true|false|1|0) #IMPLIED>\n<!ATTLIST typedef arrayDimensions CDATA #IMPLIED>\n<!ATTLIST typedef topLevel (true|false|1|0) \"true\">\n<!ATTLIST typedef nested (true|false|1|0) \"false\">\n<!ATTLIST typedef default CDATA #IMPLIED>\n<!ATTLIST typedef max CDATA #IMPLIED>\n<!ATTLIST typedef min CDATA #IMPLIED>\n\n<!ELEMENT enum (enumerator)+>\n<!ATTLIST enum name NMTOKEN #REQUIRED>\n<!ATTLIST enum allowed_data_representation CDATA #IMPLIED>\n<!ATTLIST enum extensibility CDATA #IMPLIED>\n<!ATTLIST enum bitBound CDATA \"32\">\n\n<!ELEMENT enumerator EMPTY>\n<!ATTLIST enumerator name NMTOKEN #REQUIRED>\n<!ATTLIST enumerator value CDATA #IMPLIED>\n<!ATTLIST enumerator defaultLiteral CDATA #IMPLIED>\n\n<!ELEMENT forward_dcl EMPTY>\n<!AT",
"TLIST forward_dcl name NMTOKEN #REQUIRED>\n<!ATTLIST forward_dcl kind NMTOKEN #REQUIRED>\n\n<!ELEMENT directive (#PCDATA) >\n<!ATTLIST directive kind (copy|copyC|copyJava|copyJavaBegin|\n			  copyDeclaration|copyCDeclaration|copyJavaDeclaration|\n                          copyJavaDeclarationBegin|\n			  copyCppcli|copyCppcliDeclaration) \n			#REQUIRED>\n\n<!ELEMENT bitset (flag)+>\n<!ATTLIST bitset name NMTOKEN #REQUIRED>\n<!ATTLIST bitset bitBound CDATA \"32\">\n\n<!ELEMENT flag EMPTY>\n<!ATTLIST flag name NMTOKEN #REQUIRED>\n<!ATTLIST flag value CDATA #REQUIRED>\n\n" };

#define NDDSA_AGENT_DTD_asString(str) {\
       int i;\
       (str)[0] = 0;\
       for(i = 0; i < NDDSA_AGENT_DTD_SIZE; ++i) {\
            strcat(str, NDDSA_AGENT_DTD[i]);\
       }\
}
